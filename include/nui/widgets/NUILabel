#ifndef __NUI_LABEL__
#define __NUI_LABEL__

#include <NUIObject>
#include <string>

#include <signals/signal.hpp>

namespace NUI {
    class NUILabel : public NUIObject {
    public:
        NUILabel(NUIObject* parent = nullptr);

        NUILabel& setText(NUIString const &txt);
        NUIString getText() { return m_text; }
        Signals::signal<NUIString> textChanged;

        NUILabel& setTextColor(NUIColor color);

        void paintEvent(NUIPaintEvent* event) override;
        void keyEvent(NUIKeyEvent* event) override;
        void resizeEvent(NUIResizeEvent* event) override;


        NUIReal getWidth() override { return m_width > 0 ? m_width : m_text.length(); };

    private:
        void draw(NUIBoundingRect& rect);

        NUIString m_text;
        bool m_sizeFollowContent;
    };
}

#endif